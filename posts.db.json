[{"model": "posts.post", "pk": 1, "fields": {"title": "今年首颱「蝴蝶」恐下週二生成 專家：很貼近台灣", "slug": "abc001", "content": "今年首個颱風「蝴蝶」有機會在下週報到嗎？氣象署預估，最快可能下週二會生成，但是怎麼走意見卻分歧，一旦太平洋高壓減弱較慢，有機會從台灣東側海域通過，專家認為，可能非常靠近台灣陸地，而一旦成颱，也因為，西南季風支援之下，水氣量多，得要特別注意雨量。", "pub_date": "2025-06-06T08:46:16.568Z"}}, {"model": "posts.post", "pk": 2, "fields": {"title": "中職／李多慧病倒只休1天就恢復！大讚台灣醫院「超有用」", "slug": "abc002", "content": "味全龍韓籍啦啦隊女神李多慧日前因感冒病倒，在球場出現頭暈症狀，被送去打針。李多慧後來更新動態，透露已無大礙，並稱讚台灣醫院的藥超有用。\r\n\r\n\r\n李多慧7日身體不適，不舒服的模樣讓粉絲們十分擔心，她當天發文透露自己感冒，「一整天都像坐在船上一樣頭暈頭痛，休息時間稍微閉上眼睛休息一下，結果朋友們都沒有叫醒我，讓我好好休息，真的好溫暖的朋友們。」", "pub_date": "2025-06-11T01:21:15.652Z"}}, {"model": "posts.post", "pk": 3, "fields": {"title": "美中貿易代表宣布達成初步協議 盧特尼克：稀土問題應能解決", "slug": "abc003", "content": "美國商務部長盧特尼克 (Howard Lutnick) 向倫敦的記者說：「我們已經達成一個實施日內瓦協議的框架，和兩國元首之間的通話。」\r\n\r\n中國的首席談判代表李承剛表示，美國和中國代表團現在將把提案帶回給各自的領導人。兩國代表團在白金漢宮附近一座喬治亞時代的豪宅進行了為期兩天、共計近 20 個小時的討論。\r\n\r\n盧特尼克說：「只要總統批准，我們就會尋求執行。」", "pub_date": "2025-06-11T01:21:42.552Z"}}, {"model": "posts.post", "pk": 4, "fields": {"title": "體育 〉 棒球 〉 MLB MLB》大谷翔平Live BP飆6K、156KM！ 主帥曝回歸最終目標", "slug": "abc004", "content": "道奇日籍球星大谷翔平，今天在對陣教士隊之前進行手術後第3次的實戰投打練習（Live BP），主投3局面對11位打者，44球被打1安，飆出6次三振，最快球速來到156公里。\r\n\r\n大谷翔平原本預計要在9日與紅雀的系列賽前進行Live BP，不過因為受到觸身球影響與天候不佳影響，再加上要從紅雀主場移動到教士主場，因此決定將練習延後，恰巧讓他本次的Live BP能夠在日本火腿前輩達比修有面前進行。\r\n\r\n大谷翔平分別在5月25日、5月31日與今天進行共3次Live BP，最快球速都落在97英里（約156公里）左右，根據日媒報導，大谷翔平投手回歸時間預計會是7月16日，總教練羅伯斯（Dave Roberts）提到，大谷翔平復出的最終階段會是能夠投到5局75球，而這個目標有望在本月達標。", "pub_date": "2025-06-11T01:22:18.986Z"}}, {"model": "posts.post", "pk": 5, "fields": {"title": "中職／林安可再見陽春砲 悍將敗場也安可7連敗改寫本季新猷", "slug": "abc005", "content": "獅隊在李東洺4局投球任內，局局都有分數進帳，1局下為邱智呈一壘打、林安可二壘打串連，第2局則因悍將游擊手林澤彬失誤、林子豪保送開啟攻勢，林靖凱安打再下一城。獅隊第3局靠林佳緯的安打開路，胡金龍獲得保送，林安可二壘打、潘傑楷高飛犧牲打各帶有1分打點；李東洺第4局再因兩次保送釀禍，邱智呈適時安打擴大為5：1領先。\r\n\r\n\r\n獅隊由左投林詔恩先發，投5.2局被敲7安打、失4分，先在第3局、第6局挨了豊暐、申皓瑋各一發陽春砲，後續被高捷、周佳樂接連敲安失血，獅隊換上王鏡銘接手，張進德代打敲二壘打、帶有1分打點，但張進德也在跑壘時出現傷情，因左腿緊繃提前退場。\r\n\r\n\r\n陳韻文9局上把關5：4領先，先被周佳樂敲出安打，一出局後保送孔念恩，還因暴投讓跑者進占三壘，林澤彬補上安打追平。\r\n\r\n\r\n悍將辛苦續命，但9局下續投的富藍戈讓戰局很快畫下句點，林安可一棒結束比賽，這是他生涯第4支再見安打、第2支再見全壘打，前一次他開轟說再見為2024年4月12日，棒打台鋼雄鷹隊雷公。", "pub_date": "2025-06-11T01:23:26.853Z"}}, {"model": "posts.post", "pk": 6, "fields": {"title": "Show Markdown Content", "slug": "dispaly-markdown-content", "content": "---\r\noutput: \r\n  pdf_document:\r\n    citation_package: natbib\r\n    keep_tex: true\r\n    fig_caption: true\r\n    latex_engine: pdflatex\r\n    template: ~/Dropbox/miscelanea/svm-r-markdown-templates/svm-latex-ms.tex\r\ntitle: \"A Pandoc Markdown Article Starter and Template\"\r\nthanks: \"Replication files are available on the author's Github account (http://github.com/svmiller). **Current version**: `r format(Sys.time(), '%B %d, %Y')`; **Corresponding author**: svmille@clemson.edu.\"\r\nauthor:\r\n- name: Steven V. Miller\r\n  affiliation: Clemson University\r\nabstract: \"This document provides an introduction to R Markdown, argues for its benefits, and presents a sample manuscript template intended for an academic audience. I include basic syntax to R Markdown and a minimal working example of how the analysis itself can be conducted within R with the `knitr` package.\"\r\nkeywords: \"pandoc, r markdown, knitr\"\r\ndate: \"`r format(Sys.time(), '%B %d, %Y')`\"\r\ngeometry: margin=1in\r\nfontfamily: mathpazo\r\nfontsize: 11pt\r\n# spacing: double\r\nbibliography: ~/Dropbox/master.bib\r\nbiblio-style: apsr\r\nendnote: no\r\n---\r\n\r\n# Introduction\r\n\r\nAcademic workflow, certainly in political science, is at a crossroads. The *American Journal of Political Science* (*AJPS*) announced a (my words) [\"show your work\" initiative](http://ajps.org/2015/03/26/the-ajps-replication-policy-innovations-and-revisions/) in which authors who are tentatively accepted for publication at the journal must hand over the raw code and data that produced the results shown in the manuscript. The editorial team at *AJPS* then reproduces the code from the manuscript. Pending successful replication, the manuscript moves toward publication. The *AJPS* might be at the fore of this movement, and it could be the most aggressive among political science journals, but other journals in our field have signed the joint [Data Access & Research Transparency](http://www.dartstatement.org/) (DART) initiative. This, at a bare minimum, requires uploading code from quantitatively-oriented published articles to in-house directories hosted by the journal or to services like [Dataverse](http://dataverse.org/). \r\n\r\nThere are workflow implications to the Lacour controversy as well. Political science, for the foreseeable future, will struggle with the extent of [the data fraud perpetrated by Michael Lacour](http://stanford.edu/~dbroock/broockman_kalla_aronow_lg_irregularities.pdf) in an article co-authored with Donald P. Green in *Science*, the general scientific journal of record in the United States. A failure to reproduce LaCour's results with different samples uncovered a comprehensive effort by LaCour to \"fake\" data that provided results to what we felt or believed to be true [(i.e. \"truthiness\")](http://chronicle.com/article/LAffaire-LaCour/230905/). However, [fake data can have real consequences](http://kieranhealy.org/blog/archives/2015/05/20/fake-science-real-consequences/) for both the researcher and those who want to learn from it and use it for various purposes. Even research done honestly may suffer the same fate if researchers are not diligent in their workflow.\r\n\r\nThese recent events underscore the DART push and cast a shadow over our workflow. However, good workflow has always been an issue in our discipline. Cloud storage services like [Dropbox](http://www.dropbox.com) are still relatively new among political scientists. Without cloud storage, previous workflow left open the possibility that work between a home computer and an office computer was lost as a function of a corrupted thumb drive, an overheated power supply, or, among other things, the wave of viruses that [would particularly affect Microsoft users every summer](http://money.cnn.com/2003/11/05/technology/microsoftbounty/). Social sciences, [unlike engineering](http://kieranhealy.org/blog/archives/2014/01/23/plain-text/), have traditionally relied on software like Microsoft Word for manuscript preparation though any word processor reduces workflow to a series of clicks and strokes on a keyboard. This is [a terrible way to track changes](http://www.nytimes.com/2013/04/19/opinion/krugman-the-excel-depression.html) or maintain version control. The addition of collaborators only compounds all the aforementioned issues. The proverbial left hand may not know what the right hand is doing.\r\n\r\nI think there is reason for optimism. We only struggle with it now because we have tools like [R Markdown](http://rmarkdown.rstudio.com/) and [Pandoc](http://pandoc.org/), more generally, that make significant strides in workflow. LaTeX resolved earlier issues of corrupted binary files by reducing documents to raw markup that was little more than raw text and revisions that could be easily kept as [\"commented\" text](http://tex.stackexchange.com/questions/11177/how-to-write-hidden-notes-in-a-latex-file). However, for all its benefits (including pretty PDFs), [LaTeX is *ugly* code](http://www-rohan.sdsu.edu/~aty/bibliog/latex/gripe.html) and does not provide means of seamlessly working with the actual data analysis itself. R Markdown both eliminates markup and allows the author and her collaborators to write and reproduce the manuscript in one fell swoop.\r\n\r\n# Getting Started with YAML\r\n\r\nThe lion's share of a R Markdown document will be raw text, though the front matter may be the most important part of the document. R Markdown uses [YAML](http://www.yaml.org/) for its metadata and the fields differ from [what an author would use for a Beamer presentation](http://svmiller.com/blog/2015/02/moving-from-beamer-to-r-markdown/). I provide a sample YAML metadata largely taken from this exact document and explain it below.\r\n\r\n```{r eval=FALSE}\r\n---\r\noutput: \r\n  pdf_document:\r\n    citation_package: natbib\r\n    keep_tex: true\r\n    fig_caption: true\r\n    latex_engine: pdflatex\r\n    template: ~/Dropbox/miscelanea/svm-r-markdown-templates/svm-latex-ms.tex\r\ntitle: \"A Pandoc Markdown Article Starter and Template\"\r\nthanks: \"Replication files are available on the author's Github account...\"\r\nauthor:\r\n- name: Steven V. Miller\r\n  affiliation: Clemson University\r\n- name: Mary Margaret Albright\r\n  affiliation: Pendelton State University\r\n- name: Rembrandt Q. Einstein\r\n  affiliation: Springfield University\r\nabstract: \"This document provides an introduction to R Markdown, argues for its...\"\r\nkeywords: \"pandoc, r markdown, knitr\"\r\ndate: \"`r format(Sys.time(), '%B %d, %Y')`\"\r\ngeometry: margin=1in\r\nfontfamily: mathpazo\r\nfontsize: 11pt\r\n# spacing: double\r\nbibliography: ~/Dropbox/master.bib\r\nbiblio-style: apsr\r\n---\r\n```\r\n\r\n`output:` will tell R Markdown we want a PDF document rendered with LaTeX. Since we are adding a fair bit of custom options to this call, we specify `pdf_document:` on the next line (with, importantly, a two-space indent). We specify additional output-level options underneath it, each are indented with four spaces. `citation_package: natbib` tells R Markdown to use `natbib` to handle bibliographic citations.[^natbib] Thereafter, the next line (`keep_tex: true`) tells R Markdown to render a raw `.tex` file along with the PDF document. This is useful for both debugging and the publication stage, when the editorial team will ask for the raw `.tex` so that they could render it and later provide page proofs. The next line `fig_caption: true` tells R Markdown to make sure that whatever images are included in the document are treated as figures in which our caption in brackets in a Markdown call is treated as the caption in the figure. The next line (`latex_engine: pdflatex`) tells R Markdown to use pdflatex and not some other option like `lualatex`. For my template, I'm pretty sure this is mandatory.[^pdflatex]\r\n\r\n[^natbib]: R Markdown can use Pandoc's native bibliography management system or even `biblatex`, but I've found that it chokes with some of the more advanced stuff I've done with my .bib file over the years. For example, I've been diligent about special characters (e.g. umlauts and acute accents) in author names in my .bib file, but Pandoc's native citation system will choke on these characters in a .bib file. I effectively need `natbib` for my own projects.\r\n[^pdflatex]: The main reason I still use `pdflatex` (and most readers probably do as well) is because of LaTeX fonts. [Unlike others](http://www-rohan.sdsu.edu/~aty/bibliog/latex/gripe.html), I find standard LaTeX fonts to be appealing.\r\n\r\nThe next line (`template: ...`) tells R Markdown to use my custom LaTeX template.[^path] While I will own any errors in the code, I confess to \"Frankensteining\" this template from [the default LaTeX template](https://github.com/jgm/pandoc-templates) from Pandoc, [Kieran Healy's LaTeX template](https://github.com/kjhealy/pandoc-templates/tree/master/templates), and liberally using raw TeX from the [Association for Computing Machinery's (ACM) LaTeX template](https://www.acm.org/publications/article-templates/acm-latex-style-guide). I rather like that template since it resembles standard manuscripts when they are published in some of our more prominent journals. I will continue with a description of the YAML metadata in the next paragraph, though invite the curious reader to scroll to the end of the accompanying post to see the PDF this template produces.\r\n\r\n\r\n[^path]: Notice that the path is relative. The user can, if she wishes, install this in the default Pandoc directory. I don't think this is necessary. Just be mindful of wherever the template is placed. Importantly, `~` is used in R to find the home directory (not necessarily the working directory). It is equivalent to saying `/home/steve` in Linux, or `/Users/steve` on a Mac, in my case.\r\n\r\nThe next fields get to the heart of the document itself. `title:` is, intuitively, the title of the manuscript. Do note that fields like `title:` do not have to be in quotation marks, but must be in quotation marks if the title of the document includes a colon. That said, the only reason to use a colon in an article title is if it is followed by a subtitle, hence the optional field (`subtitle:`). Notice I \"comment out\" the subtitle in the above example with a pound sign since this particular document does not have a subtitle. If `thanks:` is included and has an accompanying entry, the ensuing title of the document gets an asterisk and a footnote. This field is typically used to advise readers that the document is a working paper or is forthcoming in a journal.\r\n\r\nThe next field (`author:`) is a divergence from standard YAML, but I think it is useful. I will also confess to pilfering this idea from Kieran Healy's template. Typically, multiple authors for a given document are separated by an `\\and` in this field. However, standard LaTeX then creates a tabular field separating multiple authors that is somewhat restrictive and not easy to override. As a result, I use this setup (again, taken from Kieran Healy) to sidestep the restrictive rendering of authors in the standard `\\maketitle` tag. After `author:`, enter `- name:` (no space before the dash) and fill in the field with the first author. On the next line, enter two spaces, followed by `affiliation:` and the institute or university affiliation of the first author.\r\n\r\nDo notice this can be repeated for however many co-authors there are to a manuscript. The rendered PDF will enter each co-author in a new line in a manner similar to journals like *American Journal of Political Science*, *American Political Science Review*, or *Journal of Politics*.\r\n\r\nThe next two fields pertain to the frontmatter of a manuscript. They should also be intuitive for the reader. `abstract` should contain the abstract and `keywords` should contain some keywords that describe the research project. Both fields are optional, though are practically mandatory. Every manuscript requires an abstract and some journals---especially those published by Sage---request them with submitted manuscripts. My template also includes these keywords in the PDF's metadata.\r\n\r\n`date` comes standard with R Markdown and you can use it to enter the date of the most recent compile. I typically include the date of the last compile for a working paper in the `thanks:` field, so this field currently does not do anything in my Markdown-LaTeX manuscript template. I include it in my YAML as a legacy, basically.\r\n\r\nThe next items are optional and cosmetic. `geometry:` is a standard option in LaTeX. I set the margins at one inch, and you probably should too. `fontfamily:` is optional, but I use it to specify the Palatino font. The default option is Computer Modern Roman. `fontsize:` sets, intuitively, the font size. The default is 10-point, but I prefer 11-point. `spacing:` is an optional field. If it is set as \"double\", the ensuing document is double-spaced. \"single\" is the only other valid entry for this field, though not including the entry in the YAML metadata amounts to singlespacing the document by default. Notice I have this \"commented out\" in the example code.\r\n\r\nThe final two options pertain to the bibliography. `bibliography:` specifies the location of the .bib file, so the author could make citations in the manuscript. `biblio-style` specifies the type of bibliography to use. You'll typically set this as APSR. You could also specify the relative path of [my *Journal of Peace Research* .bst file](http://svmiller.com/miscellany/journal-of-peace-research-bst-file/) if you are submitting to that journal.\r\n\r\n# Getting Started with Markdown Syntax\r\n\r\nThere are a lot of cheatsheets and reference guides for Markdown (e.g. [Adam Prichard](https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet), [Assemble](http://assemble.io/docs/Cheatsheet-Markdown.html), [Rstudio](https://www.rstudio.com/wp-content/uploads/2015/02/rmarkdown-cheatsheet.pdf), [Rstudio again](https://www.rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf), [Scott Boms](http://scottboms.com/downloads/documentation/markdown_cheatsheet.pdf), [Daring Fireball](https://daringfireball.net/projects/markdown/syntax), among, I'm sure, several others). I encourage the reader to look at those, though I will retread these references here with a minimal working example below.\r\n\r\n```markdown\r\n\r\n# Introduction\r\n\r\n**Lorem ipsum** dolor *sit amet*. \r\n\r\n- Single asterisks italicize text *like this*. \r\n- Double asterisks embolden text **like this**.\r\n\r\nStart a new paragraph with a blank line separating paragraphs.\r\n\r\n- This will start an unordered list environment, and this will be the first item.\r\n- This will be a second item.\r\n- A third item.\r\n    - Four spaces and a dash create a sublist and this item in it.\r\n- The fourth item.\r\n    \r\n1. This starts a numerical list.\r\n2. This is no. 2 in the numerical list.\r\n    \r\n# This Starts A New Section\r\n## This is a Subsection\r\n### This is a Subsubsection\r\n#### This starts a Paragraph Block.\r\n\r\n> This will create a block quote, if you want one.\r\n\r\nWant a table? This will create one.\r\n\r\nTable Header  | Second Header\r\n------------- | -------------\r\nTable Cell    | Cell 2\r\nCell 3        | Cell 4 \r\n\r\nNote that the separators *do not* have to be aligned.\r\n\r\nWant an image? This will do it.\r\n\r\n![caption for my image](path/to/image.jpg)\r\n\r\n`fig_caption: yes` will provide a caption. Put that in the YAML metadata.\r\n\r\nAlmost forgot about creating a footnote.[^1] This will do it again.[^2]\r\n\r\n[^1]: The first footnote\r\n[^2]: The second footnote\r\n\r\nWant to cite something? \r\n\r\n- Find your biblatexkey in your bib file.\r\n- Put an @ before it, like @smith1984, or whatever it is.\r\n- @smith1984 creates an in-text citation (e.g. Smith (1984) says...)\r\n- [@smith1984] creates a parenthetical citation (Smith, 1984)\r\n\r\nThat'll also automatically create a reference list at the end of the document.\r\n\r\n[In-text link to Google](http://google.com) as well.\r\n```\r\n\r\nThat's honestly it. Markdown takes the chore of markup from your manuscript (hence: \"Markdown\").\r\n\r\nOn that note, you could easily pass most LaTeX code through Markdown if you're writing a LaTeX document. However, you don't need to do this (unless you're using the math environment) and probably shouldn't anyway if you intend to share your document in HTML as well.\r\n\r\n# Using R Markdown with Knitr\r\n\r\nPerhaps the greatest intrigue of R Markdown comes with the [`knitr` package](http://yihui.name/knitr/) provided by @xie2013ddrk. In other words, the author can, if she chooses, do the analysis in the Markdown document itself and compile/execute it in R.\r\n\r\nTake, for example, this simple exercise using the `voteincome` data from the `Zelig` package. Suppose I want to explain the decision to vote using data from this package. I load in the data, clean the data, run the analyses, and present the results as a coefficient plot.\r\n\r\nHere's what this code looks like. All I did was create a code display, which starts with three *backticks* (i.e. those ticks next to the number 1 key on your keyboard) and ends with three backticks on another line. On the first line of backticks (i.e. to start the code display) enter `{r, eval=FALSE, tidy=TRUE}`. The `eval=FALSE` option just displays the R code (and does not run it), `tidy=TRUE` wraps long code so it does not run off the page.\r\n\r\nWithin that code display, I enter my R code like this.\r\n\r\n\r\n```{r, eval=FALSE, tidy = TRUE}\r\nsuppressMessages(library(Zelig))\r\nsuppressMessages(library(arm))\r\nsuppressMessages(library(coefplot))\r\n\r\ndata(voteincome)\r\n\r\nvoteincome$z.age <- arm::rescale(voteincome$age)\r\nvoteincome$z.education <- arm::rescale(voteincome$education)\r\nvoteincome$z.income <- arm::rescale(voteincome$income)\r\n\r\nM1 <- glm(vote ~ z.age + female + z.education + z.income,\r\n            data=voteincome, family=binomial)\r\n\r\ncoefplot(M1)\r\n```\r\n\r\nThe implications for workflow are faily substantial. Authors can rather quickly display the code they used to run the analyses in the document itself (likely in the appendix). As such, there's little guesswork for reviewers and editors in understanding what the author did in the analyses reported in the manuscript.\r\n\r\nIt doesn't end there. In fact, here's what happens when `eval=FALSE` is omitted or changed to `eval=TRUE`. Now, the code runs within R. Observe.\r\n\r\n```{r, eval=TRUE, tidy = TRUE, cache=FALSE, fig.cap=\"A Coefficient Plot\"}\r\nsuppressMessages(library(Zelig))\r\nsuppressMessages(library(arm))\r\n\r\n\r\ndata(voteincome)\r\n\r\nvoteincome$z.age <- arm::rescale(voteincome$age)\r\nvoteincome$z.education <- arm::rescale(voteincome$education)\r\nvoteincome$z.income <- arm::rescale(voteincome$income)\r\n\r\nM1 <- glm(vote ~ z.age + female + z.education + z.income,\r\n            data=voteincome, family=binomial)\r\n\r\narm::coefplot(M1)\r\n```\r\n\r\nTo get `knitr` to present the results of a table, add `results=\"asis\"` to the brackets to start the R code chunk. The ensuing output will look like this (though the table may come on the next page).\r\n\r\n```{r, eval=TRUE, tidy = TRUE, size=\"small\", cache=FALSE, results=\"asis\"}\r\nsuppressMessages(library(Zelig))\r\nsuppressMessages(library(stargazer))\r\nsuppressMessages(library(arm))\r\n\r\ndata(voteincome)\r\n\r\nvoteincome$z.age <- arm::rescale(voteincome$age)\r\nvoteincome$z.education <- arm::rescale(voteincome$education)\r\nvoteincome$z.income <- arm::rescale(voteincome$income)\r\n\r\n\r\nM1 <- glm(vote ~ z.age + female + z.education + z.income,\r\n            data=voteincome, family=binomial)\r\n\r\nstargazer(M1, title=\"A Handsome Table\", header=FALSE)\r\n```\r\n\r\nAdding `echo=\"FALSE\"` inside the brackets to start the R chunk will omit the presentation of the R commands. It will just present the table. This provides substantial opportunity for authors in doing their analyses. Now, the analysis and presentation in the form of a polished manuscript can be effectively simultaneous.[^4]\r\n\r\n[^4]: I'm not sure if I'm ready to commit to this myself since my workflow is still largely derived from [Rob J. Hyndman's example](http://robjhyndman.com/hyndsight/workflow-in-r/). However, *knitr* has endless potential, especially when analyses can stored in cache, saved as chunks, or loaded in the preamble of a document to reference later in the manuscript.\r\n\r\n\r\n\r\n\r\n<!--\r\n# References\r\n\\setlength{\\parindent}{-0.2in}\r\n\\setlength{\\leftskip}{0.2in}\r\n\\setlength{\\parskip}{8pt}\r\n\\vspace*{-0.2in}\r\n\\noindent\r\n-->", "pub_date": "2025-06-17T08:39:28.033Z"}}]